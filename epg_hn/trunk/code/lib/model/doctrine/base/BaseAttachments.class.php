<?php

/**
 * BaseAttachments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $source_name
 * @property string $file_name
 * @property string $file_key
 * @property integer $category_id
 * @property string $thumb
 * 
 * @method string      getSourceName()  Returns the current record's "source_name" value
 * @method string      getFileName()    Returns the current record's "file_name" value
 * @method string      getFileKey()     Returns the current record's "file_key" value
 * @method integer     getCategoryId()  Returns the current record's "category_id" value
 * @method string      getThumb()       Returns the current record's "thumb" value
 * @method Attachments setSourceName()  Sets the current record's "source_name" value
 * @method Attachments setFileName()    Sets the current record's "file_name" value
 * @method Attachments setFileKey()     Sets the current record's "file_key" value
 * @method Attachments setCategoryId()  Sets the current record's "category_id" value
 * @method Attachments setThumb()       Sets the current record's "thumb" value
 * 
 * @package    epg2.0
 * @subpackage model
 * @author     Huan Tek
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAttachments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('attachments');
        $this->hasColumn('source_name', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('file_name', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('file_key', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('thumb', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 0,
             'length' => 4000,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}