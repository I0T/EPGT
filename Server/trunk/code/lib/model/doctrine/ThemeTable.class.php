<?php

/**
 * ThemeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ThemeTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ThemeTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Theme');
    }
    
    /**
     * 根据当前页数$page，每页限数量$size.查找themes 后台用
     *
     * @return object 
     * author wangnan
     */
    public static function getThemeByPageAndSize($page,$size)
    {
        //$memcache = tvCache::getInstance();
        //$memcache_key = md5('getThemeByPageAndSize'.",$page,$size");
        //$themes = $memcache->get($memcache_key);
        //if(!$themes){        
        	$offset = ($page-1)*$size;
    		$themes    = Doctrine::getTable('Theme')->createQuery()
    					->offset($offset)
    					->limit($size)
    					//->where("publish= ?",1)
                        ->orderBy('id DESC')
    					->execute();
            //if($page<=3&&($size==8||$size==10))            
                //$memcache->set($memcache_key,$themes);
        //}            
		return $themes;
    }
    /**
     * 根据当前页数$page，每页限数量$size.查找themes 前台用
     *
     * @return object 
     * author wangnan
     */
    public static function getThemeByPageAndSizeFrontend($page,$size,$scene = '')
    {
        //$memcache = tvCache::getInstance();
        //$memcache_key = md5('getThemeByPageAndSizeFrontend'.",$page,$size,$scene");
        //$themes = $memcache->get($memcache_key);
        //if(!$themes){        
        	$offset = ($page-1)*$size;
            if($scene){
                $themes    = Doctrine::getTable('Theme')->createQuery()
    					->offset($offset)
    					->limit($size)
    					->where("publish= ?",1)
                        ->addWhere('scene= ?',$scene)
                        ->orderBy('id DESC')
                        ->execute();
            }else{
                $themes    = Doctrine::getTable('Theme')->createQuery()
    					->offset($offset)
    					->limit($size)
    					->where("publish= ?",1)
                        ->orderBy('id DESC')
                        ->execute();
            }            
            //echo "<pre>";
            //print_r($themes);
            //echo "</pre>";
            //exit;
           // if($page<=3&&($size==8||$size==10))            
           //     $memcache->set($memcache_key,$themes);
        //}
		return $themes;
    }
    /**
     * 查找所有theme
     *
     * @return object 
     * author wangnan
     */
    public static function getThemes($scene = '')
    {
        //$memcache = tvCache::getInstance();
        //$memcache_key = md5('getThemes');
        //$themes = $memcache->get($memcache_key);        
        //if(!$themes){  
            if($scene){
                $themes = Doctrine::getTable('Theme')->createQuery()
    					->where("publish= ?",1)
                        ->addWhere('scene= ?',$scene)
                        ->execute();
            }else {
                $themes = Doctrine::getTable('Theme')->createQuery()
    					->where("publish= ?",1)
                        ->execute();
            }
            
            //$memcache->set($memcache_key,$themes);            
        //}            
		return $themes;
    }    
    /**
     * 根据当前页数$page，每页限数量$size.查找themes 后台用
     *
     * @return object 
     * author wangnan
     */
    public static function getThemeByPageAndSizeAndQuery($page,$size,$query)
    {
        //$memcache = tvCache::getInstance();
        //$memcache_key = md5('getThemeByPageAndSize'.",$page,$size");
        //$themes = $memcache->get($memcache_key);
        //if(!$themes){        
        	$offset = ($page-1)*$size;
    		$themes    = Doctrine::getTable('Theme')->createQuery()
    					->offset($offset)
    					->limit($size)
    					->where($query)
                        ->orderBy('id DESC')
    					->execute();
            //if($page<=3&&($size==8||$size==10))            
            //    $memcache->set($memcache_key,$themes);
        //}            
		return $themes;
    }    
}