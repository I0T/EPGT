<?php

/**
 * BaseTheme
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $remark
 * @property string $img
 * @property integer $publish
 * @property string $model
 * @property string $scene
 * @property Doctrine_Collection $ThemeItem
 * 
 * @method string              getTitle()     Returns the current record's "title" value
 * @method string              getRemark()    Returns the current record's "remark" value
 * @method string              getImg()       Returns the current record's "img" value
 * @method integer             getPublish()   Returns the current record's "publish" value
 * @method string              getModel()     Returns the current record's "model" value
 * @method string              getScene()     Returns the current record's "scene" value
 * @method Doctrine_Collection getThemeItem() Returns the current record's "ThemeItem" collection
 * @method Theme               setTitle()     Sets the current record's "title" value
 * @method Theme               setRemark()    Sets the current record's "remark" value
 * @method Theme               setImg()       Sets the current record's "img" value
 * @method Theme               setPublish()   Sets the current record's "publish" value
 * @method Theme               setModel()     Sets the current record's "model" value
 * @method Theme               setScene()     Sets the current record's "scene" value
 * @method Theme               setThemeItem() Sets the current record's "ThemeItem" collection
 * 
 * @package    epg2.0
 * @subpackage model
 * @author     Huan Tek
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTheme extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('theme');
        $this->hasColumn('title', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('remark', 'string', 4000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('img', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('publish', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('model', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('scene', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 250,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ThemeItem', array(
             'local' => 'id',
             'foreign' => 'theme_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}