<?php

/**
 * BaseWikiExt
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property integer $sort
 * @property integer $wiki_id
 * @property string $wiki_key
 * @property string $wiki_value
 * 
 * @method string  getTitle()      Returns the current record's "title" value
 * @method integer getSort()       Returns the current record's "sort" value
 * @method integer getWikiId()     Returns the current record's "wiki_id" value
 * @method string  getWikiKey()    Returns the current record's "wiki_key" value
 * @method string  getWikiValue()  Returns the current record's "wiki_value" value
 * @method WikiExt setTitle()      Sets the current record's "title" value
 * @method WikiExt setSort()       Sets the current record's "sort" value
 * @method WikiExt setWikiId()     Sets the current record's "wiki_id" value
 * @method WikiExt setWikiKey()    Sets the current record's "wiki_key" value
 * @method WikiExt setWikiValue()  Sets the current record's "wiki_value" value
 * @property  $
 * 
 * @package    epg
 * @subpackage model
 * @author     Mozi Tek
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWikiExt extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('wiki_ext');
        $this->hasColumn('title', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sort', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('wiki_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('wiki_key', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('wiki_value', 'string', 10000, array(
             'type' => 'string',
             'length' => 10000,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Wiki', array(
             'local' => 'wiki_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}